{
    "swagger": "2.0",
    "info": {
        "description": "DYN HTTPS Rest API discovery website.",
        "title": "DYN HTTPS Restful API Documentation",
        "termsOfService": "http://www.duality.solutions/dynhttps/terms",
        "contact": {
            "name": "API Support",
            "url": "http://www.duality.solutions/support",
            "email": "support@duality.solutions"
        },
        "license": {
            "name": "Duality",
            "url": "https://github.com/duality-solutions/dyn-https/blob/master/LICENSE.md"
        },
        "version": "1.0"
    },
    "host": "http://docs.dyn-https.duality.solutions",
    "basePath": "/api/v1",
    "paths": {
        "/api/v1/config/web": {
            "get": {
                "description": "Returns the internal web server's settings for the current running configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.WebServerConfig"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Updates the internal web server's settings for the current running configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "WebServer",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.WebServerConfig"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.WebServerConfig"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/config/web/restart": {
            "put": {
                "description": "Restarts the internal web server using the current configuration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "RestartEpoch",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.WebServerRestartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/overview": {
            "get": {
                "description": "Returns the current DYN HTTPS overview status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.OverviewResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/wallet/defaultaddress": {
            "get": {
                "description": "Returns a default standard wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.WalletAddressResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/wallet/mnemonic": {
            "get": {
                "description": "Shows the current wallet mnemonic and HD information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.MnemonicResponse"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Replaces the current wallet mnemonic with a new mnemonic",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Mnemonic",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ImportMnemonicRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/wallet/setup": {
            "get": {
                "description": "Returns the current wallet setup status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.WalletSetupStatus"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/wallet/setup/backup": {
            "post": {
                "description": "Updates the wallet setup backup mnemonic configuration to true",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/models.WalletSetupStatus"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v1/wallet/transactions": {
            "get": {
                "description": "Returns a list of transactions received or sent from this wallet",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.TransactionsResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AccountOverview": {
            "type": "object",
            "properties": {
                "audits": {
                    "type": "integer"
                },
                "certificates": {
                    "type": "integer"
                },
                "complete_links": {
                    "type": "integer"
                },
                "pending_links": {
                    "type": "integer"
                },
                "users": {
                    "type": "integer"
                }
            }
        },
        "models.BlockchainOverview": {
            "type": "object",
            "properties": {
                "blocks": {
                    "type": "integer"
                },
                "client_version": {
                    "type": "integer"
                },
                "fully_synced": {
                    "type": "boolean"
                },
                "network": {
                    "type": "string"
                },
                "peers": {
                    "type": "integer"
                },
                "status_description": {
                    "type": "string"
                },
                "sync_progress": {
                    "type": "number"
                },
                "total_blocks": {
                    "type": "integer"
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.ImportMnemonicRequest": {
            "type": "object",
            "properties": {
                "language": {
                    "description": "Language (string, optional: english|french|chinesesimplified|chinesetraditional|italian|japanese|korean|spanish)",
                    "type": "string"
                },
                "mnemonic": {
                    "description": "Mnemonic (string, required) mnemonic delimited by the dash charactor (-) or space. Use 12 or 24 words",
                    "type": "string"
                },
                "passphrase": {
                    "description": "Passphrase (string, optional) mnemonic passphrase used as the 13th or 25th word",
                    "type": "string"
                }
            }
        },
        "models.MnemonicResponse": {
            "type": "object",
            "properties": {
                "hdseed": {
                    "description": "HDSeed (string, required) deterministic wallet seed",
                    "type": "string"
                },
                "mnemonic": {
                    "description": "Mnemonic (string, required) mnemonic associated with HD seed",
                    "type": "string"
                },
                "mnemonicpassphrase": {
                    "description": "MnemonicPassphrase (string, optional)  mnemonic passphrase used as the 13th or 25th word",
                    "type": "string"
                }
            }
        },
        "models.OverviewResponse": {
            "type": "object",
            "properties": {
                "accounts": {
                    "$ref": "#/definitions/models.AccountOverview"
                },
                "chain": {
                    "$ref": "#/definitions/models.BlockchainOverview"
                },
                "wallet": {
                    "$ref": "#/definitions/models.WalletOverview"
                }
            }
        },
        "models.TransactionsResponse": {
            "type": "object",
            "properties": {
                "Amount": {
                    "type": "number"
                },
                "Category": {
                    "type": "string"
                },
                "account": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                },
                "bip125-replaceable": {
                    "type": "string"
                },
                "blockhash": {
                    "type": "string"
                },
                "blockindex": {
                    "type": "integer"
                },
                "blocktime": {
                    "type": "integer"
                },
                "confirmations": {
                    "type": "integer"
                },
                "instantlock": {
                    "type": "boolean"
                },
                "label": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                },
                "timereceived": {
                    "type": "integer"
                },
                "txid": {
                    "type": "string"
                },
                "vout": {
                    "type": "integer"
                },
                "walletconflicts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.WalletAddressResponse": {
            "type": "object",
            "properties": {
                "address": {
                    "description": "Address (string, required) wallet address",
                    "type": "string"
                }
            }
        },
        "models.WalletOverview": {
            "type": "object",
            "properties": {
                "available_balance": {
                    "type": "number"
                },
                "credits": {
                    "type": "number"
                },
                "deposits": {
                    "type": "number"
                },
                "encrypted": {
                    "type": "boolean"
                },
                "pending_balance": {
                    "type": "number"
                },
                "total_balance": {
                    "type": "number"
                },
                "transactions": {
                    "type": "integer"
                },
                "unlockedepoch": {
                    "type": "integer"
                }
            }
        },
        "models.WalletSetupStatus": {
            "type": "object",
            "properties": {
                "HasAccounts": {
                    "type": "boolean"
                },
                "HasLinks": {
                    "type": "boolean"
                },
                "HasTransactions": {
                    "type": "boolean"
                },
                "MnemonicBackup": {
                    "type": "boolean"
                },
                "UnlockedUntil": {
                    "type": "integer"
                },
                "WalletEncrypted": {
                    "type": "boolean"
                }
            }
        },
        "models.WebServerConfig": {
            "type": "object",
            "properties": {
                "allowCIDR": {
                    "type": "string"
                },
                "bindAddress": {
                    "type": "string"
                },
                "listenPort": {
                    "type": "integer"
                }
            }
        },
        "models.WebServerRestartRequest": {
            "type": "object",
            "properties": {
                "restart_epoch": {
                    "type": "integer"
                }
            }
        }
    }
}